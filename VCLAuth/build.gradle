plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'signing'
}

android {
    compileSdkVersion 33
    buildToolsVersion "30.0.3"
    namespace 'io.velocitycareerlabs.vclauth'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
        versionName "1.1.0"
        versionCode 4
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
//            useProguard false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
//            useProguard true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

/**
 * Publish Android library to GitHub Packages ======================================================
 */
def getVersionName = { ->
    return android.defaultConfig.versionName
}
def getArtifactId = { ->
    return "vclauth" // Must be lower case!
}
def getGroupId = { ->
    return 'io.velocitycareerlabs'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        // For pure Kotlin libraries, in case you have them
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId getGroupId()
                artifactId getArtifactId()
                version getVersionName()

                // Two artifacts, the `aar` (or `jar`) and the sources
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar

                // Mostly self-explanatory metadata
                pom {
                    name = getArtifactId()
                    // Library description
                    description = 'User authorization Android library'
                    // Library Github URL
                    url = 'https://github.com/velocitycareerlabs/AuthAndroid'
                    licenses {
                        license {
                            name = 'Apache License 2.0'
                            // Library license
                            url = 'https://github.com/velocitycareerlabs/AuthAndroid/blob/dev/VCLAuth/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'velocitycareerlabs'
                            name = 'Michael Avoyan'
                            email = 'michael.avoyan@velocitycareerlabs.com'
                        }
                    }

                    scm {
                        // Library info on Github
                        connection = 'scm:github.com/velocitycareerlabs/AuthAndroid.git'
                        developerConnection = 'scm:git:ssh://github.com/velocitycareerlabs/AuthAndroid.git'
                        url = 'https://github.com/velocitycareerlabs/AuthAndroid'
                    }
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            rootProject.ext.signingKeyId,
            rootProject.ext.signingPrivateKey,
            rootProject.ext.signingPassword,
    )
    sign publishing.publications
}

repositories {
    mavenCentral()
}

/**
 * =================================================================================================
 */

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.7.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation "androidx.biometric:biometric:1.1.0"
}